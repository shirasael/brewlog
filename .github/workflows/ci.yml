name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    # Set up Node.js
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    # Backend setup and checks
    - name: Install backend dependencies
      working-directory: backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8 black isort
        pip install -e .  # Install the backend package in development mode

    - name: Lint backend code
      working-directory: backend
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check code formatting with black
        black --check .
        # Check import sorting
        isort --check-only --diff .

    - name: Run backend tests
      working-directory: backend
      run: |
        pytest -v  # Added -v for more verbose output

    # Frontend setup and checks
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Lint frontend code
      working-directory: frontend
      run: |
        npm run lint
        npm run format:check

    - name: Run frontend tests
      working-directory: frontend
      run: npm test -- --watchAll=false
